environment:
  matrix:
    # Python 2.7
    - PYTHON: "C:\\Python27"
      MINICONDA: C:\Miniconda
      PYTHON_VERSION: 2.7
    - PYTHON: "C:\\Python27-x64"
      MINICONDA: C:\Miniconda
      PYTHON_VERSION: 2.7

    # Commented out since tests were passing but build still failing.
    # Python 3.5
    # - PYTHON: "C:\\Python35"
    #   MINICONDA: C:\Miniconda35
    #   PYTHON_VERSION: 3.5
    # - PYTHON: "C:\\Python35-x64"
    #   MINICONDA: C:\Miniconda35
    #   PYTHON_VERSION: 3.5

    # Python 3.6
    - PYTHON: "C:\\Python36"
      MINICONDA: C:\Miniconda36
      PYTHON_VERSION: 3.6
    - PYTHON: "C:\\Python36-x64"
      MINICONDA: C:\Miniconda36
      PYTHON_VERSION: 3.6

    # Python 3.7
    - PYTHON: "C:\\Python37"
      MINICONDA: C:\Miniconda37
      PYTHON_VERSION: 3.7
    - PYTHON: "C:\\Python37-x64"
      MINICONDA: C:\Miniconda37
      PYTHON_VERSION: 3.7
    #
  PYPI_PASSWORD:
    secure: G9v/9wFi36a/e93v1QiONiuQCxqQ9adFqUiFMdM/3W4=

install:
  - "set PATH=%MINICONDA%;%MINICONDA%\\Scripts;%PATH%"
  - conda config --set always_yes yes --set changeps1 no
  - conda update -q conda
  - conda install -c anaconda msvc_runtime
  # We need to install numpy, scipy and matplotlib through conda
  - "conda create -c anaconda -q -n test-environment python=%PYTHON_VERSION% numpy scipy matplotlib nose pyqt msvc_runtime"
  - "pip install segyio"
  - activate test-environment
  - pip install mock
  - pip install wheel twine six pytest
  # give me a remote-login option to debug
  - ps: iex ((new-object net.webclient).DownloadString('https://raw.githubusercontent.com/appveyor/ci/master/scripts/enable-rdp.ps1'))

build: off

test_script:
  - "python setup.py test"

after_test:
  - "python setup.py bdist_wheel"

artifacts:
  - path: dist\*
    name: pypiartifacts

deploy_script:
  - echo "Starting Artifact Deployment"
  # populate pypirc file for twine
  - echo [distutils]                                  > %USERPROFILE%\\.pypirc
  - echo index-servers =                             >> %USERPROFILE%\\.pypirc
  - echo     pypi                                    >> %USERPROFILE%\\.pypirc
  - echo [pypi]                                      >> %USERPROFILE%\\.pypirc
  - echo username=dlilien                            >> %USERPROFILE%\\.pypirc
  - echo password=%PYPI_PASSWORD%                    >> %USERPROFILE%\\.pypirc

  # upload to pypi for windows
  - set PATH=%BK_PATH%
  - set HOME=%USERPROFILE%
  - ps: If ($env:APPVEYOR_REPO_TAG -eq "true" -And $env:APPVEYOR_REPO_BRANCH -eq "master") { Invoke-Expression "twine upload --skip-existing dist/*.whl" 2>$null } Else { write-output "Not on a tag on master, won't deploy to pypi"}
  - echo "Finished Artifact Deployment"
notifications:
  - provider: Webhook
    url: https://webhooks.gitter.im/e/3a0242522a806d39ba2b
    method: POST
