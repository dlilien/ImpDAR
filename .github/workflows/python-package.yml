# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Python package

on:
  push:
    branches: [ master, devel ]
  pull_request:
    branches: [ master, devel ]

jobs:
  build:

    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]  #, macos-latest, windows-latest]
        python-version: ["3.7", "3.8", "3.9", "3.10"]
        qt5: [true, false]
        # gdal: [true, false]
        seisunix: [true, false]
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install flake8 pytest
        python -m pip install pytest-cov
        python -m pip install coverage
        python -m pip install mock
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
        python -m pip install .
    - name: Install optional dependency qt5
      if: ${{ matrix.qt5 }}
      run: |
        sudo apt install -y xvfb x11-utils libxkbcommon-x11-0 libxcb-icccm4 libxcb-image0 libxcb-keysyms1 libxcb-randr0 libxcb-render-util0 libxcb-xinerama0 pyqt5-dev-tools
        python -m pip install pyqt5
        python -c 'import PyQt5'
    - name: Install optional dependency SeisUnix
      if: ${{ matrix.seisunix }}
      run: |
        sudo apt-get install gfortran
        export thisdir=$PWD
        export CWPROOT=$PWD/SeisUnix
        git checkout https://github.com/JohnWStockwellJr/SeisUnix.git
        cd $CWPROOT/src 
        mv configs/Makefile.config_Linux_x86_64 Makefile.config
        touch LICENSE_44R14_ACCEPTED
        touch MAILHOME_44R14
        make install <<< y
        cd $thisdir
    - name: Install optional dependency GDAL
      if: ${{ matrix.gdal }}
      run: |
        sudo apt-get install libgdal-dev
        export CPLUS_INCLUDE_PATH=/usr/include/gdal
        export C_INCLUDE_PATH=/usr/include/gdal
        python -m pip install gdal==1.10.0
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Run test
      run: |
        xvfb-run `which pytest` --cov-config=.coveragerc --cov=./ --cov-report=xml

    - name: "Upload coverage to Codecov"
      uses: codecov/codecov-action@v2
      with:
        fail_ci_if_error: true
        token: ${{ secrets.CODECOV_TOKEN }} # not required for public repos
